name: Build and Release

on:
  push:
    tags:
      - '*-RELEASE' # Trigger only on tags ending with "-RELEASE"

permissions:
  contents: write # Required to create releases and upload assets
  id-token: write # Required for GitHub Actions to authenticate with the repository

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      version_name: ${{ steps.set_version.outputs.version_name }}
    steps:
      - name: Set version name
        id: set_version
        run: |
          VERSION_NAME=$(echo ${GITHUB_REF##*/} | sed 's/-RELEASE$//')
          echo "VERSION_NAME=$VERSION_NAME"
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT

  build_windows:
    runs-on: windows-latest
    needs: config
    env:
      VERSION_NAME: ${{ needs.config.outputs.version_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Windows executable
        run: |
          echo "Building Bolder version ${{ env.VERSION_NAME }}"
          (Get-Content main.py) -replace '__VERSION_NAME__', "${{ env.VERSION_NAME }}" | Set-Content main.py
          pyinstaller --onefile main.py --noconsole --hidden-import=google
          Rename-Item -Path dist\main.exe -NewName BolderPlus.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BolderPlus-Windows
          path: dist/BolderPlus.exe

  build_macos:
    runs-on: macos-latest
    needs: config
    env:
      VERSION_NAME: ${{ needs.config.outputs.version_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build macOS app
        run: |
          echo "Building Bolder version ${{ env.VERSION_NAME }}"
          sed -i '' "s/__VERSION_NAME__/${{ env.VERSION_NAME }}/g" main.py
          pyinstaller --onefile main.py --noconsole --windowed --hidden-import=google
          mv dist/main.app dist/BolderPlus.app

      - name: Compress macOS app
        run: |
          zip -r dist/BolderPlus.app.zip dist/BolderPlus.app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BolderPlus-macOS
          path: dist/BolderPlus.app.zip

  build_linux:
    runs-on: ubuntu-latest
    needs: config
    env:
      VERSION_NAME: ${{ needs.config.outputs.version_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Linux executable
        run: |
          echo "Building Bolder version ${{ env.VERSION_NAME }}"
          sed -i "s/__VERSION_NAME__/${{ env.VERSION_NAME }}/g" main.py
          pyinstaller --onefile main.py --noconsole --hidden-import=google
          mv dist/main dist/bolderplus
          chmod +x dist/bolderplus

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BolderPlus-Linux
          path: dist/bolderplus

  create_release:
    runs-on: ubuntu-latest
    needs:
      - build_windows
      - build_macos
      - build_linux
      - config
    env:
      VERSION_NAME: ${{ needs.config.outputs.version_name }}
    steps:

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get tag annotation
        id: tag_message
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          TAG_MESSAGE=$(git for-each-ref --format='%(contents)' refs/tags/$TAG_NAME)
          TAG_MESSAGE=${TAG_MESSAGE:-"Release for version ${{ env.VERSION_NAME }}"}
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$TAG_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ env.VERSION_NAME }}
          body: ${{ steps.tag_message.outputs.message }}
          draft: false
          prerelease: false

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/BolderPlus-Windows/BolderPlus.exe
          asset_name: BolderPlus.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/BolderPlus-macOS/BolderPlus.app.zip
          asset_name: BolderPlus.app.zip
          asset_content_type: application/zip

      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/BolderPlus-Linux/bolderplus
          asset_name: bolderplus
          asset_content_type: application/octet-stream